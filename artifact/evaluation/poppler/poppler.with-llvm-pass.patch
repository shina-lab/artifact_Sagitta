diff --git a/CMakeLists.txt b/CMakeLists.txt
index b060ff20..60cac295 100644
--- a/CMakeLists.txt
+++ b/CMakeLists.txt
@@ -846,3 +846,6 @@ add_custom_target(dist
         COMMAND tar -C ${CMAKE_BINARY_DIR} -rf ${CMAKE_BINARY_DIR}/${ARCHIVE_NAME}.tar glib/reference/html --transform='s,,${ARCHIVE_NAME}/,' --owner root:0 --group root:0
         COMMAND xz -9 ${CMAKE_BINARY_DIR}/${ARCHIVE_NAME}.tar
     WORKING_DIRECTORY ${CMAKE_SOURCE_DIR})
+
+target_compile_options(poppler PRIVATE -flto=full -fpass-plugin=/home/aoki/shina-lab/project-ultimate-sanitizer/try-clang/FunctionTracer/build/libFunctionTracerPass.so)
+target_link_libraries(poppler PUBLIC /home/aoki/shina-lab/project-ultimate-sanitizer/try-clang/FunctionTracer/build/libftrace.a)

diff --git a/cpp/CMakeLists.txt b/cpp/CMakeLists.txt
index c37936b6..f65d8bec 100644
--- a/cpp/CMakeLists.txt
+++ b/cpp/CMakeLists.txt
@@ -31,7 +31,7 @@ if(MINGW AND BUILD_SHARED_LIBS)
     get_target_property(POPPLER_CPP_SOVERSION poppler-cpp SOVERSION)
     set_target_properties(poppler-cpp PROPERTIES SUFFIX "-${POPPLER_CPP_SOVERSION}${CMAKE_SHARED_LIBRARY_SUFFIX}")
 endif()
-target_link_libraries(poppler-cpp poppler ${ICONV_LIBRARIES})
+target_link_libraries(poppler-cpp poppler ${ICONV_LIBRARIES} /home/aoki/shina-lab/project-ultimate-sanitizer/try-clang/FunctionTracer/build/libftrace.a)
 install(TARGETS poppler-cpp RUNTIME DESTINATION bin LIBRARY DESTINATION ${CMAKE_INSTALL_LIBDIR} ARCHIVE DESTINATION ${CMAKE_INSTALL_LIBDIR})
 
 install(FILES
@@ -51,3 +51,4 @@ install(FILES
   ${CMAKE_CURRENT_BINARY_DIR}/poppler-version.h
   DESTINATION include/poppler/cpp)
 
+target_compile_options(poppler-cpp PRIVATE -flto=full -fpass-plugin=/home/aoki/shina-lab/project-ultimate-sanitizer/try-clang/FunctionTracer/build/libFunctionTracerPass.so)

diff --git a/utils/CMakeLists.txt b/utils/CMakeLists.txt
index ce0ce166..a6b4220b 100644
--- a/utils/CMakeLists.txt
+++ b/utils/CMakeLists.txt
@@ -1,3 +1,4 @@
+add_compile_options(-flto=full -fpass-plugin=/home/aoki/shina-lab/project-ultimate-sanitizer/try-clang/FunctionTracer/build/libFunctionTracerPass.so)
 
 set(common_srcs
   parseargs.cc
