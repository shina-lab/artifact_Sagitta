=== Claim 1: Localization Graph Reproduction for TIF008 
Claim: Our technique successfully captures causal relationships between input-derived root causes and crash sites through localized graph visualization, even when causality involves both data flow and control flow dependencies.

This artifact reproduces Case Study 6.4.2 (TIF008) from our evaluation, which identified 10 success cases where the localized graph captured the causal chain needed to understand the root cause. 
We selected TIF008 as a representative since verifying all cases would be labor-intensive for evaluators. 
TIF008 exemplifies our domination integration effectiveness in handling control flow dependencies.

Process Phases:
    (1) TIF008 bug reproduction using the Magma framework.
    (2) Instrumented libtiff compilation with polytracker for taint analysis.
    (3) Localization graph generation via data flow analysis.
    (4) Review of the generated localization graph (in SVG format) against the Figure 5 results.

Expected output (Generated localization graph):
    For crash: claims/claim1/diff.TIF008.crash-000117.taint.svg
    For non-crash: Not generated (Non-crash input does not execute the MAGMA canary for TIF008)

Validation: Follow expected/validation_info.txt for success criteria and steps

Required disk space: 100 GB.
Required memory: 32 GB.
Estimated time: around 12 minutes for phases 1-3, and 5-10 minutes for phase 4.


--- Exercise Steps
1. Run run.sh to perform phases 1-3.
    - Phase 2 success indicates our modified polytracker successfully instruments libtiff.
    - Phase 3 success indicates our tool generates localization graphs (SVG appears in claims/claim1/).
2. Follow expected/validation_info.txt to perform phase 4.
    - Success of phase 4 proves our claim is satisfied.
